generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id             String           @id
  email          String           @unique
  name           String?
  onboarded      Boolean          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  chat_sessions  chat_sessions[]
  user_companies user_companies[]

  @@map("users")
}

model Company {
  id             Int              @id(map: "companies_new_pkey") @default(autoincrement())
  company_name   String           @db.VarChar(255)
  company_id     String?          @unique(map: "companies_new_company_id_key") @db.VarChar(100)
  sector         String?          @db.VarChar(100)
  location       String?          @db.VarChar(100)
  revenue        Float?
  employees      Int?
  created_at     DateTime         @db.Timestamp(6)
  updated_at     DateTime         @db.Timestamp(6)
  user_companies user_companies[]

  @@map("companies")
}

model Agency {  // Changed from Agency to match table
  id          Int       @id @default(autoincrement())  // Changed from String to Int
  name        String
  contact     String?
  description String?
  fundings    Funding[] // Changed from fundings to match relationship
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("agencies")
}

model Funding {  // Keep as Funding (table is fundings)
  id           Int            @id @default(autoincrement())  // Changed from String to Int
  title        String
  description  String?
  sector       String?
  deadline     DateTime?
  amount       Float?
  eligibility  String?
  requiredDocs String?        @map("required_docs")  // Changed from String[] to String
  agencyId     Int            @map("agency_id")      // Changed from String to Int
  s3Key        String?        @map("s3_key")         // Added missing field
  agency       Agency         @relation(fields: [agencyId], references: [id])
  chunks       FundingChunk[]
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")

  @@map("fundings")
}

model funding_chunks {
  id         Int                    @id @default(autoincrement())
  funding_id Int
  chunk_text String
  embedding  Unsupported("vector")?
  page_no    Int?
  created_at DateTime               @db.Timestamp(6)
  updated_at DateTime               @db.Timestamp(6)
  fundings   Funding                @relation(fields: [funding_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_companies {
  user_id    String  @db.VarChar
  company_id Int
  role       String? @db.VarChar(50)
  companies  Company @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      User    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, company_id])
}
